[plugins]
codecov = "org.enginehub.codecov:0.2.0"
neogradle-userdev = "net.neoforged.gradle.userdev:7.0.142"
fabric-loom = "fabric-loom:1.6.12"
sponge-spongegradle = "org.spongepowered.gradle.plugin:2.2.0"
sponge-vanillagradle = { id = "org.spongepowered.gradle.vanilla", version.ref = "sponge-vanillagradle" }

[versions]
kyoriText = "3.0.4"
piston = "0.5.10"
autoValue = "1.10.4"
antlr = "4.13.1"

fabric-api = "0.100.3+1.21"

neoforge-minecraft = "1.21"

sponge-minecraft = "1.21"
# https://repo.spongepowered.org/service/rest/repository/browse/maven-public/org/spongepowered/spongeapi/
sponge-api = "12.0.0-20240616.151530-3"
sponge-api-major = "12"

# https://parchmentmc.org/docs/getting-started; note that we use older MC versions some times which is OK
parchment-minecraft = "1.20.6"
parchment-mappings = "2024.06.16"

# https://repo.spongepowered.org/service/rest/repository/browse/maven-public/org/spongepowered/vanillagradle/
sponge-vanillagradle = "0.2.1-20240617.053350-83"

# Minimum versions we apply to make dependencies support newer Java
minimumAsm = "9.7"
minimumJdependency = "2.10"
minimumTinyRemapper = "0.8.11"

lang-worldeditBase = "7.3.4"
lang-version = "1450"

[libraries]
neogradle-neoform = "net.neoforged.gradle:neoform:7.0.142"
sponge-vanillagradle = { module = "org.spongepowered:vanillagradle", version.ref = "sponge-vanillagradle" }

licenser = "gradle.plugin.org.cadixdev.gradle:licenser:0.6.1"
grgit = "org.ajoberstar.grgit:grgit-gradle:5.2.2"
japicmp = "me.champeau.gradle:japicmp-gradle-plugin:0.4.2"
shadow = "com.github.johnrengelman:shadow:8.1.1"
jfrog-buildinfo = "org.jfrog.buildinfo:build-info-extractor-gradle:5.2.0"

fabric-mixin = "net.fabricmc:sponge-mixin:0.13.3+mixin.0.8.5"

paperweight = "io.papermc.paperweight.userdev:io.papermc.paperweight.userdev.gradle.plugin:1.7.2"

linBus-bom = "org.enginehub.lin-bus:lin-bus-bom:0.1.0"
linBus-common.module = "org.enginehub.lin-bus:lin-bus-common"
linBus-stream.module = "org.enginehub.lin-bus:lin-bus-stream"
linBus-tree.module = "org.enginehub.lin-bus:lin-bus-tree"
linBus-format-snbt.module = "org.enginehub.lin-bus.format:lin-bus-format-snbt"

autoService = "com.google.auto.service:auto-service:1.1.1"

jsr305 = "com.google.code.findbugs:jsr305:3.0.2"
jetbrains-annotations = "org.jetbrains:annotations:24.1.0"
errorprone-annotations = "com.google.errorprone:error_prone_annotations:2.11.0"

junit-bom = "org.junit:junit-bom:5.10.2"
junit-jupiter-api.module = "org.junit.jupiter:junit-jupiter-api"
junit-jupiter-params.module = "org.junit.jupiter:junit-jupiter-params"
junit-jupiter-engine.module = "org.junit.jupiter:junit-jupiter-engine"

jqwik = "net.jqwik:jqwik:1.9.0"

mockito-bom = "org.mockito:mockito-bom:5.11.0"
mockito-core.module = "org.mockito:mockito-core"
mockito-junit-jupiter.module = "org.mockito:mockito-junit-jupiter"

commonsCli = "commons-cli:commons-cli:1.4"

spigot = "org.spigotmc:spigot-api:1.20.2-R0.1-20231205.164257-71"
paperApi = "io.papermc.paper:paper-api:1.20.2-R0.1-20231203.034718-122"
paperLib = "io.papermc:paperlib:1.0.8"

dummypermscompat = "com.sk89q:dummypermscompat:1.10"
bstats-bukkit = "org.bstats:bstats-bukkit:2.2.1"

trueZip = "de.schlichtherle:truezip:6.8.4"
rhino = "org.mozilla:rhino-runtime:1.7.13"
jchronic = "com.sk89q:jchronic:0.2.4a"
jlibnoise = "com.sk89q.lib:jlibnoise:1.0.0"

fabric-minecraft = "com.mojang:minecraft:1.21"
fabric-loader = "net.fabricmc:fabric-loader:0.15.11"
fabric-permissions-api = "me.lucko:fabric-permissions-api:0.3.1"

neoforge = "net.neoforged:neoforge:21.0.16-beta"

# Mojang-provided libraries, CHECK AGAINST MINECRAFT for versions
guava = "com.google.guava:guava:32.1.3-jre!!"
log4j-bom = "org.apache.logging.log4j:log4j-bom:2.22.1!!"
log4j-api.module = "org.apache.logging.log4j:log4j-api"
log4j-core.module = "org.apache.logging.log4j:log4j-core"
gson = "com.google.code.gson:gson:2.10.1!!"
fastutil = "it.unimi.dsi:fastutil:8.5.12!!"

# Bukkit-provided libraries, CHECK AGAINST SPIGOT for versions
# Note that we need to balance support for older MC versus working at all on newer ones, so the exact versions here
# may not be the same as the ones in the latest Bukkit API.
snakeyaml = "org.yaml:snakeyaml:2.0"

[libraries.kyoriText-api]
module = "net.kyori:text-api"
version.ref = "kyoriText"

[libraries.kyoriText-serializer-gson]
module = "net.kyori:text-serializer-gson"
version.ref = "kyoriText"

[libraries.kyoriText-serializer-legacy]
module = "net.kyori:text-serializer-legacy"
version.ref = "kyoriText"

[libraries.kyoriText-serializer-plain]
module = "net.kyori:text-serializer-plain"
version.ref = "kyoriText"

[libraries.kyoriText-adapter-bukkit]
module = "net.kyori:text-adapter-bukkit"
version = "3.0.6"

[libraries.piston-core]
module = "org.enginehub.piston:core"
version.ref = "piston"

[libraries.piston-defaultImpl]
module = "org.enginehub.piston:default-impl"
version.ref = "piston"

[libraries.piston-coreAp-annotations]
module = "org.enginehub.piston.core-ap:annotations"
version.ref = "piston"

[libraries.piston-coreAp-processor]
module = "org.enginehub.piston.core-ap:processor"
version.ref = "piston"

[libraries.piston-coreAp-runtime]
module = "org.enginehub.piston.core-ap:runtime"
version.ref = "piston"

[libraries.autoValue]
module = "com.google.auto.value:auto-value"
version.ref = "autoValue"

[libraries.autoValue-annotations]
module = "com.google.auto.value:auto-value-annotations"
version.ref = "autoValue"

[libraries.antlr4]
module = "org.antlr:antlr4"
version.ref = "antlr"

[libraries.antlr4-runtime]
module = "org.antlr:antlr4-runtime"
