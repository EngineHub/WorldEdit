{
    "Nothing should be implementing a conflicting method": [
        {
            "type": "com.sk89q.worldedit.extent.clipboard.Clipboard",
            "member": "Method com.sk89q.worldedit.extent.clipboard.Clipboard.transform(com.sk89q.worldedit.math.transform.Transform)",
            "changes": [
                "METHOD_NEW_DEFAULT"
            ]
        },
        {
            "type": "com.sk89q.worldedit.function.mask.Mask",
            "member": "Method com.sk89q.worldedit.function.mask.Mask.toMask2D()",
            "changes": [
                "METHOD_ABSTRACT_NOW_DEFAULT"
            ]
        },
        {
            "type": "com.sk89q.worldedit.util.paste.Paster",
            "member": "Method com.sk89q.worldedit.util.paste.Paster.paste(java.lang.String)",
            "changes": [
                "METHOD_ABSTRACT_NOW_DEFAULT"
            ]
        },
        {
            "type": "com.sk89q.worldedit.world.block.BlockStateHolder",
            "member": "Method com.sk89q.worldedit.world.block.BlockStateHolder.toBaseBlock(com.sk89q.jnbt.CompoundTag)",
            "changes": [
                "METHOD_ABSTRACT_NOW_DEFAULT",
                "ANNOTATION_DEPRECATED_ADDED"
            ]
        },
        {
            "type": "com.sk89q.worldedit.world.block.BlockStateHolder",
            "member": "Method com.sk89q.worldedit.world.block.BlockStateHolder.toBaseBlock(com.sk89q.worldedit.util.concurrency.LazyReference)",
            "changes": [
                "METHOD_NEW_DEFAULT"
            ]
        },
        {
            "type": "com.sk89q.worldedit.world.block.BlockStateHolder",
            "member": "Method com.sk89q.worldedit.world.block.BlockStateHolder.toBaseBlock(com.sk89q.worldedit.util.nbt.CompoundBinaryTag)",
            "changes": [
                "METHOD_NEW_DEFAULT"
            ]
        },
        {
            "type": "com.sk89q.worldedit.world.NbtValued",
            "member": "Method com.sk89q.worldedit.world.NbtValued.getNbt()",
            "changes": [
                "METHOD_NEW_DEFAULT"
            ]
        },
        {
            "type": "com.sk89q.worldedit.world.NbtValued",
            "member": "Method com.sk89q.worldedit.world.NbtValued.getNbtData()",
            "changes": [
                "METHOD_ABSTRACT_NOW_DEFAULT",
                "ANNOTATION_DEPRECATED_ADDED"
            ]
        },
        {
            "type": "com.sk89q.worldedit.world.NbtValued",
            "member": "Method com.sk89q.worldedit.world.NbtValued.getNbtReference()",
            "changes": [
                "METHOD_NEW_DEFAULT"
            ]
        },
        {
            "type": "com.sk89q.worldedit.world.NbtValued",
            "member": "Method com.sk89q.worldedit.world.NbtValued.hasNbtData()",
            "changes": [
                "METHOD_ABSTRACT_NOW_DEFAULT",
                "ANNOTATION_DEPRECATED_ADDED"
            ]
        },
        {
            "type": "com.sk89q.worldedit.world.NbtValued",
            "member": "Method com.sk89q.worldedit.world.NbtValued.setNbt(com.sk89q.worldedit.util.nbt.CompoundBinaryTag)",
            "changes": [
                "METHOD_NEW_DEFAULT"
            ]
        },
        {
            "type": "com.sk89q.worldedit.world.NbtValued",
            "member": "Method com.sk89q.worldedit.world.NbtValued.setNbtData(com.sk89q.jnbt.CompoundTag)",
            "changes": [
                "METHOD_ABSTRACT_NOW_DEFAULT",
                "ANNOTATION_DEPRECATED_ADDED"
            ]
        },
        {
            "type": "com.sk89q.worldedit.world.NbtValued",
            "member": "Method com.sk89q.worldedit.world.NbtValued.setNbtReference(com.sk89q.worldedit.util.concurrency.LazyReference)",
            "changes": [
                "METHOD_NEW_DEFAULT"
            ]
        },
        {
            "type": "com.sk89q.worldedit.extent.clipboard.io.legacycompat.EntityNBTCompatibilityHandler",
            "member": "Method com.sk89q.worldedit.extent.clipboard.io.legacycompat.EntityNBTCompatibilityHandler.updateNbt(com.sk89q.worldedit.world.entity.EntityType,org.enginehub.linbus.tree.LinCompoundTag)",
            "changes": [
                "METHOD_NEW_DEFAULT"
            ]
        },
        {
            "type": "com.sk89q.worldedit.extent.clipboard.io.legacycompat.NBTCompatibilityHandler",
            "member": "Method com.sk89q.worldedit.extent.clipboard.io.legacycompat.NBTCompatibilityHandler.updateNbt(com.sk89q.worldedit.world.block.BaseBlock)",
            "changes": [
                "METHOD_NEW_DEFAULT"
            ]
        },
        {
            "type": "com.sk89q.worldedit.world.block.BlockStateHolder",
            "member": "Method com.sk89q.worldedit.world.block.BlockStateHolder.toBaseBlock(org.enginehub.linbus.tree.LinCompoundTag)",
            "changes": [
                "METHOD_NEW_DEFAULT"
            ]
        },
        {
            "type": "com.sk89q.worldedit.world.NbtValued",
            "member": "Method com.sk89q.worldedit.world.NbtValued.setNbt(org.enginehub.linbus.tree.LinCompoundTag)",
            "changes": [
                "METHOD_NEW_DEFAULT"
            ]
        },
        {
            "type": "com.sk89q.worldedit.world.World",
            "member": "Method com.sk89q.worldedit.world.World.generateFeature(com.sk89q.worldedit.world.generation.ConfiguredFeatureType,com.sk89q.worldedit.EditSession,com.sk89q.worldedit.math.BlockVector3)",
            "changes": [
                "METHOD_NEW_DEFAULT"
            ]
        }
    ],
    "LazyReference was never publicly extensible": [
        {
            "type": "com.sk89q.worldedit.util.concurrency.LazyReference",
            "member": "Class com.sk89q.worldedit.util.concurrency.LazyReference",
            "changes": [
                "CLASS_NOW_FINAL"
            ]
        }
    ],
    "Extending Tag never made sense": [
        {
            "type": "com.sk89q.jnbt.Tag",
            "member": "Constructor com.sk89q.jnbt.Tag()",
            "changes": [
                "CONSTRUCTOR_REMOVED"
            ]
        }
    ],
    "DataFixer isn't API": [
        {
            "type": "com.sk89q.worldedit.world.DataFixer$FixTypes",
            "member": "Field ENTITY",
            "changes": [
                "FIELD_NOW_FINAL"
            ]
        },
        {
            "type": "com.sk89q.worldedit.world.DataFixer$FixTypes",
            "member": "Field BIOME",
            "changes": [
                "FIELD_NOW_FINAL"
            ]
        },
        {
            "type": "com.sk89q.worldedit.world.DataFixer$FixTypes",
            "member": "Field BLOCK_STATE",
            "changes": [
                "FIELD_NOW_FINAL"
            ]
        },
        {
            "type": "com.sk89q.worldedit.world.DataFixer$FixTypes",
            "member": "Field BLOCK_ENTITY",
            "changes": [
                "FIELD_NOW_FINAL"
            ]
        },
        {
            "type": "com.sk89q.worldedit.world.DataFixer$FixTypes",
            "member": "Field ITEM_TYPE",
            "changes": [
                "FIELD_NOW_FINAL"
            ]
        },
        {
            "type": "com.sk89q.worldedit.world.DataFixer$FixTypes",
            "member": "Field CHUNK",
            "changes": [
                "FIELD_NOW_FINAL"
            ]
        }
    ],
    "This now delegates to the InputStream method if not implemented": [
        {
            "type": "com.sk89q.worldedit.extent.clipboard.io.ClipboardFormat",
            "member": "Method com.sk89q.worldedit.extent.clipboard.io.ClipboardFormat.isFormat(java.io.File)",
            "changes": [
                "METHOD_ABSTRACT_NOW_DEFAULT"
            ]
        }
    ],
    "New method added with default implementation": [
        {
            "type": "com.sk89q.worldedit.extent.clipboard.io.ClipboardFormat",
            "member": "Method com.sk89q.worldedit.extent.clipboard.io.ClipboardFormat.isFormat(java.io.InputStream)",
            "changes": [
                "METHOD_NEW_DEFAULT"
            ]
        }
    ]
}
